import cv2
import mediapipe as mp
import serial
import time

# Arduino bağlantısını kurun (port adını kendi sisteminize göre değiştirin)
arduino = serial.Serial('COM5', 9600, timeout=1)
time.sleep(2)  # Arduino'nun başlaması için bekleyin

# MediaPipe el tespit modelini hazırlayın
mp_hands = mp.solutions.hands
hands = mp_hands.Hands(static_image_mode=False, max_num_hands=1, min_detection_confidence=0.5)

# Kamerayı açın
cap = cv2.VideoCapture(0)

def is_thumb_open(hand_landmarks):
    thumb_tip = hand_landmarks.landmark[4]
    thumb_mcp = hand_landmarks.landmark[2]
    thumb_ip = hand_landmarks.landmark[3]
    
    # Başparmağın yatay konumunu kontrol et
    if hand_landmarks.landmark[5].x < hand_landmarks.landmark[17].x:  # Sol el
        return thumb_tip.x < thumb_ip.x < thumb_mcp.x
    else:  # Sağ el
        return thumb_tip.x > thumb_ip.x > thumb_mcp.x

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        continue

    # Görüntüyü RGB'ye çevirin
    rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

    # El tespiti yapın
    results = hands.process(rgb_frame)

    finger_count = 0
    if results.multi_hand_landmarks:
        for hand_landmarks in results.multi_hand_landmarks:
            # Başparmağı kontrol et
            if is_thumb_open(hand_landmarks):
                finger_count += 1
            
            # Diğer parmakları say
            for i in range(8, 21, 4):  # Diğer parmaklar
                if hand_landmarks.landmark[i].y < hand_landmarks.landmark[i-2].y:
                    finger_count += 1

    # Arduino'ya parmak sayısını gönderin
    arduino.write(str(finger_count).encode())

    # Ekranda parmak sayısını gösterin
    cv2.putText(frame, f'Fingers: {finger_count}', (10, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)
    cv2.imshow('Hand Detection', frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
arduino.close()
